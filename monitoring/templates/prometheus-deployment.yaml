apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  labels:
    {{- include "monitoring.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "monitoring.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "monitoring.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: prometheus
          image: "{{ .Values.prometheus.server.image.repository }}:{{ .Values.prometheus.server.image.tag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--storage.tsdb.retention.time={{ .Values.prometheus.server.retention }}"
            - "--web.console.libraries=/usr/share/prometheus/console_libraries"
            - "--web.console.templates=/usr/share/prometheus/consoles"
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
            - name: prometheus-storage
              mountPath: /prometheus
          resources:
            {{- toYaml .Values.prometheus.server.resources | nindent 12 }}
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
        - name: prometheus-storage
          {{- if .Values.prometheus.server.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: prometheus-storage
          {{- else }}
          emptyDir: {}
          {{- end }} 
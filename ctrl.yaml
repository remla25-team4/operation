- hosts: all
  become: true
  tasks:
    - name: Check if cluster is already initialized
      ansible.builtin.stat:
        path: /etc/kubernetes/admin.conf
      register: kubeconfig_file

    - name: Initialize Kubernetes cluster
      ansible.builtin.command: >
        kubeadm init
        --apiserver-advertise-address=192.168.56.100
        --node-name=ctrl
        --pod-network-cidr=10.244.0.0/16
      when: not kubeconfig_file.stat.exists

    - name: Create .kube directory for vagrant user
      ansible.builtin.file:
        path: /home/vagrant/.kube
        state: directory
        owner: vagrant
        group: vagrant
        mode: '0755'
      when: not kubeconfig_file.stat.exists

    - name: Copy admin.conf for vagrant user
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/vagrant/.kube/config
        owner: vagrant
        group: vagrant
        mode: '0644'
        remote_src: yes
      when: not kubeconfig_file.stat.exists

    - name: Copy kubeconfig to host machine
      ansible.builtin.fetch:
        src: /etc/kubernetes/admin.conf
        dest: ./kubeconfig
        flat: yes
      when: not kubeconfig_file.stat.exists

    - name: Download kube-flannel.yml
      ansible.builtin.get_url:
        url: https://github.com/flannel-io/flannel/releases/download/v0.26.7/kube-flannel.yml
        dest: /tmp/kube-flannel.yml
      when: not kubeconfig_file.stat.exists

    - name: Add iface argument to kube-flannel.yml DaemonSet
      ansible.builtin.replace:
        path: /tmp/kube-flannel.yml
        regexp: '      - args:\n        - --ip-masq\n        - --kube-subnet-mgr'
        replace: '      - args:\n        - --ip-masq\n        - --kube-subnet-mgr\n        - --iface=eth1'
      when: not kubeconfig_file.stat.exists

    - name: Apply modified kube-flannel.yml
      ansible.builtin.command: kubectl apply -f /tmp/kube-flannel.yml
      become_user: vagrant
      when: not kubeconfig_file.stat.exists

    - name: Get system architecture (dpkg)
      ansible.builtin.command: dpkg --print-architecture
      register: dpkg_arch
      changed_when: false

    - name: Add Helm GPG keyring
      ansible.builtin.apt_key:
        url: https://baltocdn.com/helm/signing.asc
        keyring: /usr/share/keyrings/helm.gpg
        state: present

    - name: Add the community Helm apt repository
      ansible.builtin.apt_repository:
        repo: >-
          deb [arch={{ dpkg_arch.stdout }} signed-by=/usr/share/keyrings/helm.gpg] 
          https://baltocdn.com/helm/stable/debian/ all main
        filename: helm-stable-debian
        state: present   

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes 

    - name: Install helm
      ansible.builtin.apt:
        name:
          - helm
        state: present
        update_cache: no

    - name: Install helm diff for vagrant user
      ansible.builtin.command: helm plugin install https://github.com/databus23/helm-diff
      become_user: vagrant
      environment:
        HOME: /home/vagrant # Ensures helm installs plugins in vagrant's home
      args:
        creates: /home/vagrant/.local/share/helm/plugins/helm-diff

    - name: Ensure python3-pip is installed
      become: true
      ansible.builtin.apt:
        name: python3-pip
        state: present
        update_cache: yes

    - name: Ensure Kubernetes Python client library is installed via apt
      become: true
      ansible.builtin.apt:
        name: python3-kubernetes
        state: present
        update_cache: yes

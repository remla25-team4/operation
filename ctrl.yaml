- hosts: all
  become: true
  tasks:
    - name: Check if cluster is already initialized
      ansible.builtin.stat:
        path: /etc/kubernetes/admin.conf
      register: kubeconfig_file

    - name: Initialize Kubernetes cluster
      ansible.builtin.command: >
        kubeadm init
        --apiserver-advertise-address=192.168.56.100
        --node-name=ctrl
        --pod-network-cidr=10.244.0.0/16
      when: not kubeconfig_file.stat.exists
      args:
        creates: /etc/kubernetes/admin.conf  

    - name: Create .kube directory for vagrant user
      ansible.builtin.file:
        path: /home/vagrant/.kube
        state: directory
        owner: vagrant
        group: vagrant
        mode: '0755'

    - name: Copy admin.conf for vagrant user
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/vagrant/.kube/config
        owner: vagrant
        group: vagrant
        mode: '0644'
        remote_src: yes
      when: not kubeconfig_file.stat.exists 

    - name: Copy kubeconfig to host machine
      ansible.builtin.fetch:
        src: /etc/kubernetes/admin.conf
        dest: ./kubeconfig
        flat: yes
      when: not kubeconfig_file.stat.exists  

    - name: Download kube-flannel.yml 
      ansible.builtin.get_url:
        url: https://github.com/flannel-io/flannel/releases/download/v0.26.7/kube-flannel.yml
        dest: /tmp/kube-flannel.yml
        mode: '0644'
      when: not kubeconfig_file.stat.exists 

    - name: Add iface argument to kube-flannel.yml DaemonSet
      ansible.builtin.lineinfile:
        path: /tmp/kube-flannel.yml
        insertafter: '^\s*- --kube-subnet-mgr'
        line: '        - --iface=eth1'
      when: not kubeconfig_file.stat.exists

    - name: Check if flannel is already applied
      become_user: vagrant
      ansible.builtin.command: kubectl get daemonset kube-flannel -n kube-flannel --ignore-not-found
      register: flannel_installed
      failed_when: false
      changed_when: false
      environment:
        KUBECONFIG: /home/vagrant/.kube/config
    
    - name: Check if Flannel is deployed
      become_user: vagrant
      ansible.builtin.command: >
        kubectl get daemonset kube-flannel -n kube-flannel -o json
      register: flannel_status
      failed_when: false
      changed_when: false
      environment:
        KUBECONFIG: /home/vagrant/.kube/config

    - name: Apply kube-flannel if not already applied
      become_user: vagrant
      ansible.builtin.command: kubectl apply -f /tmp/kube-flannel.yml
      when:
        - kubeconfig_file.stat.exists
        - flannel_status.rc != 0
      register: flannel_apply
      changed_when: >
        flannel_apply.stdout is search("created") or
        flannel_apply.stdout is search("configured")
      environment:
        KUBECONFIG: /home/vagrant/.kube/config

    - name: Get system architecture (dpkg)
      ansible.builtin.command: dpkg --print-architecture
      register: dpkg_arch
      changed_when: false

    - name: Add Helm GPG keyring
      ansible.builtin.apt_key:
        url: https://baltocdn.com/helm/signing.asc
        keyring: /usr/share/keyrings/helm.gpg
        state: present

    - name: Add the community Helm apt repository
      ansible.builtin.apt_repository:
        repo: >-
          deb [arch={{ dpkg_arch.stdout }} signed-by=/usr/share/keyrings/helm.gpg]
          https://baltocdn.com/helm/stable/debian/ all main
        filename: helm-stable-debian
        state: present

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install helm
      ansible.builtin.apt:
        name: helm
        state: present

    - name: Install helm diff for vagrant user
      ansible.builtin.command: helm plugin install https://github.com/databus23/helm-diff
      become_user: vagrant
      environment:
        HOME: /home/vagrant
      args:
        creates: /home/vagrant/.local/share/helm/plugins/helm-diff
        
    - name: Ensure python3-pip is installed
      ansible.builtin.apt:
        name: python3-pip
        state: present

    - name: Ensure Kubernetes Python client library is installed via apt
      ansible.builtin.apt:
        name: python3-kubernetes
        state: present
